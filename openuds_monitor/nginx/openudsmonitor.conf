# This is required to proxy Grafana Live WebSocket connections.
# https://grafana.com/tutorials/run-grafana-behind-a-proxy/#configure-nginx
map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}

upstream grafana_up {
    server grafana:3000;
}

server {
    listen       443 ssl;
    http2        on;
    server_name  127.0.0.1;

    ssl_certificate /etc/nginx/ssl/self.cert;
    ssl_certificate_key /etc/nginx/ssl/self-ssl.key;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
    ssl_ecdh_curve secp384r1;
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off;
    ssl_stapling off;
    ssl_stapling_verify off;

    include common.conf;
    
    root /usr/share/nginx/html;

    absolute_redirect off;

    # https://grafana.com/tutorials/run-grafana-behind-a-proxy/#configure-nginx
    # see "To configure nginx to serve Grafana under a sub path" section
    location /grafana/ {
        rewrite  ^/grafana/(.*) /$1 break;
        #proxy_buffering off;
        #proxy_http_version 1.1;
        #proxy_set_header Upgrade $http_upgrade;
        #access_log off;
        #client_max_body_size 4096m;
        proxy_set_header Host $host;
        proxy_pass http://grafana_up;

        #include common_location.conf;
    }

    # Proxy Grafana Live WebSocket connections.
    location /grafana/api/live/ {
        rewrite  ^/grafana/(.*) /$1 break;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        #proxy_set_header Host $host;
        proxy_set_header Host $http_host;
        proxy_pass http://grafana_up;

        #include common_location.conf;
    }

    location /prom/ {
        proxy_pass http://prometheus:9090/prom/;
        proxy_buffering off;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $http_connection;
        access_log off;
        client_max_body_size 4096m;

        include common_location.conf;
    }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
}
